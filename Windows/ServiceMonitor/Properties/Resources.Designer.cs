//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.18034
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AlarmWorkflow.Windows.ServiceMonitor.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AlarmWorkflow.Windows.ServiceMonitor.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sie müssen Administratorrechte besitzen, um diese Aktion auszuführen! ähnelt.
        /// </summary>
        internal static string AdministratorRequiredMessage {
            get {
                return ResourceManager.GetString("AdministratorRequiredMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &quot;Während dem Hinzufügen eines neuen Logeintrags ist ein Fehler aufgetretten {0}&quot; ähnelt.
        /// </summary>
        internal static string LogAddError {
            get {
                return ResourceManager.GetString("LogAddError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Beim Öffnen der Datei {0} ist folgender Fehler aufgetretten:
        ///{1} ähnelt.
        /// </summary>
        internal static string ReadFileError {
            get {
                return ResourceManager.GetString("ReadFileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sie sind im Begriff, den Service neuzustarten. Während dieser Zeit können keine Alarmquellen ausgewertet werden. Dieser Vorgang kann bis zu ein paar Minuten dauern. Bitte bestätigen Sie, dass Sie dies durchführen möchten. ähnelt.
        /// </summary>
        internal static string RestartServiceMessage {
            get {
                return ResourceManager.GetString("RestartServiceMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sie sind dabei, den Service zu installieren. Bitte bestätigen Sie, um fortzufahren. Sie können dann anschließend den Service starten. ähnelt.
        /// </summary>
        internal static string ServiceInstallConfirmationMessage {
            get {
                return ResourceManager.GetString("ServiceInstallConfirmationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Installation des Services ist gescheitert. Die Fehlermeldung lautet: 
        ///
        ///&apos;{0}&apos; ähnelt.
        /// </summary>
        internal static string ServiceInstallFailedMessage {
            get {
                return ResourceManager.GetString("ServiceInstallFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Installation des Services ist abgeschlossen! Sie können den Service nun starten. ähnelt.
        /// </summary>
        internal static string ServiceInstallSuccessMessage {
            get {
                return ResourceManager.GetString("ServiceInstallSuccessMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Der Service ist nicht installiert! Die Aktion kann nicht ausgeführt werden. Bitte installieren Sie zuerst den Service! ähnelt.
        /// </summary>
        internal static string ServiceIsNotInstalledError {
            get {
                return ResourceManager.GetString("ServiceIsNotInstalledError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Der Service konnte nicht gestartet werden. Die Fehlermeldung lautet:
        ///
        ///&apos;{0}&apos; ähnelt.
        /// </summary>
        internal static string ServiceStartError {
            get {
                return ResourceManager.GetString("ServiceStartError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Der Service konnte nicht gestoppt werden. Die Fehlermeldung lautet: 
        ///
        ///&apos;{0}&apos; ähnelt.
        /// </summary>
        internal static string ServiceStopError {
            get {
                return ResourceManager.GetString("ServiceStopError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sie sind dabei, den Service zu deinstallieren. Bitte bestätigen Sie, um fortzufahren. ähnelt.
        /// </summary>
        internal static string ServiceUninstallConfirmationMessage {
            get {
                return ResourceManager.GetString("ServiceUninstallConfirmationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Der Service läuft noch. Bitte beenden Sie ihn zuerst, bevor sie ihn deinstallieren! ähnelt.
        /// </summary>
        internal static string ServiceUninstallErrorServiceIsRunningMessage {
            get {
                return ResourceManager.GetString("ServiceUninstallErrorServiceIsRunningMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deinstallation des Services ist gescheitert. Die Fehlermeldung lautet: 
        ///
        ///&apos;{0}&apos; ähnelt.
        /// </summary>
        internal static string ServiceUninstallFailedMessage {
            get {
                return ResourceManager.GetString("ServiceUninstallFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deinstallation des Services ist abgeschlossen! ähnelt.
        /// </summary>
        internal static string ServiceUninstallSuccessMessage {
            get {
                return ResourceManager.GetString("ServiceUninstallSuccessMessage", resourceCulture);
            }
        }
    }
}
